# Generated by Django 5.2.4 on 2025-10-26 04:27

import django.db.models.deletion
from django.db import migrations, models


def preserve_existing_data(apps, schema_editor):
    """Preserva os dados existentes nos campos legado"""
    Veiculo = apps.get_model('drivecar', 'Veiculo')
    
    # Migra dados existentes para os campos legado
    for veiculo in Veiculo.objects.all():
        if hasattr(veiculo, 'marca') and veiculo.marca:
            # Se marca ainda é string, move para marca_legado
            if isinstance(veiculo.marca, str):
                veiculo.marca_legado = veiculo.marca
        
        if hasattr(veiculo, 'modelo') and veiculo.modelo:
            # Se modelo ainda é string, move para modelo_legado  
            if isinstance(veiculo.modelo, str):
                veiculo.modelo_legado = veiculo.modelo
        
        veiculo.save()


class Migration(migrations.Migration):

    dependencies = [
        ('drivecar', '0004_alter_veiculo_combustivel_alter_veiculo_usuario'),
    ]

    operations = [
        # 1. Primeiro cria os campos legado
        migrations.AddField(
            model_name='veiculo',
            name='marca_legado',
            field=models.CharField(blank=True, max_length=50, verbose_name='marca (legado)'),
        ),
        migrations.AddField(
            model_name='veiculo',
            name='modelo_legado',
            field=models.CharField(blank=True, max_length=50, verbose_name='modelo (legado)'),
        ),
        
        # 2. Preserva dados existentes
        migrations.RunPython(preserve_existing_data, migrations.RunPython.noop),
        
        # 3. Cria as novas tabelas
        migrations.CreateModel(
            name='Marca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, unique=True, verbose_name='nome da marca')),
                ('logo', models.CharField(blank=True, max_length=200, verbose_name='logo/imagem')),
                ('ativo', models.BooleanField(default=True, verbose_name='ativo')),
            ],
            options={
                'verbose_name': 'Marca',
                'verbose_name_plural': 'Marcas',
                'ordering': ['nome'],
            },
        ),
        
        migrations.CreateModel(
            name='Modelo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='nome do modelo')),
                ('ano_inicio', models.PositiveIntegerField(blank=True, null=True, verbose_name='ano de início')),
                ('ano_fim', models.PositiveIntegerField(blank=True, null=True, verbose_name='ano de fim')),
                ('ativo', models.BooleanField(default=True, verbose_name='ativo')),
                ('marca', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='drivecar.marca', verbose_name='marca')),
            ],
            options={
                'verbose_name': 'Modelo',
                'verbose_name_plural': 'Modelos',
                'ordering': ['marca__nome', 'nome'],
                'unique_together': {('marca', 'nome')},
            },
        ),

        migrations.CreateModel(
            name='Versao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='nome da versão')),
                ('motor', models.CharField(blank=True, max_length=50, verbose_name='motor')),
                ('combustivel', models.CharField(blank=True, max_length=20, verbose_name='combustível')),
                ('transmissao', models.CharField(blank=True, max_length=20, verbose_name='transmissão')),
                ('ano_inicio', models.PositiveIntegerField(blank=True, null=True, verbose_name='ano de início')),
                ('ano_fim', models.PositiveIntegerField(blank=True, null=True, verbose_name='ano de fim')),
                ('ativo', models.BooleanField(default=True, verbose_name='ativo')),
                ('modelo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='drivecar.modelo', verbose_name='modelo')),
            ],
            options={
                'verbose_name': 'Versão',
                'verbose_name_plural': 'Versões',
                'ordering': ['modelo__marca__nome', 'modelo__nome', 'nome'],
                'unique_together': {('modelo', 'nome')},
            },
        ),
        
        # 4. Remove os campos antigos e adiciona os novos ForeignKeys
        migrations.RemoveField(
            model_name='veiculo',
            name='marca',
        ),
        migrations.RemoveField(
            model_name='veiculo',
            name='modelo',
        ),
        
        # 5. Adiciona os novos campos ForeignKey (opcionais)
        migrations.AddField(
            model_name='veiculo',
            name='marca',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='drivecar.marca', verbose_name='marca'),
        ),
        migrations.AddField(
            model_name='veiculo',
            name='modelo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='drivecar.modelo', verbose_name='modelo'),
        ),
        migrations.AddField(
            model_name='veiculo',
            name='versao',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='drivecar.versao', verbose_name='versão'),
        ),
    ]