#!/usr/bin/env python
"""
Teste para verificar os cards dos ve√≠culos ap√≥s as melhorias
"""
import os
import sys
import django

# Configurar Django
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'drivecar_project.settings')
django.setup()

from django.contrib.auth.models import User
from drivecar.models import Veiculo

def test_vehicle_cards():
    print("üé® VERIFICA√á√ÉO DOS CARDS DE VE√çCULOS")
    print("=" * 45)
    
    # Buscar ve√≠culos do admin
    admin_user = User.objects.filter(username='admin').first()
    if not admin_user:
        print("‚ùå Usu√°rio admin n√£o encontrado!")
        return
    
    veiculos = Veiculo.objects.filter(usuario=admin_user)
    
    print(f"\nüìã Ve√≠culos do usu√°rio {admin_user.username}:")
    print("-" * 45)
    
    for i, veiculo in enumerate(veiculos, 1):
        print(f"\n{i}. üöó Card do Ve√≠culo:")
        
        # Dados que aparecer√£o no card
        marca_nome = veiculo.marca.nome if veiculo.marca else veiculo.marca_legado or "Marca n√£o definida"
        modelo_nome = veiculo.modelo.nome if veiculo.modelo else veiculo.modelo_legado or "Modelo n√£o definido"
        
        print(f"   üìå T√≠tulo: {marca_nome} {modelo_nome}")
        print(f"   üìÖ Meta: {veiculo.ano} ‚Ä¢ {veiculo.km_atual:,} km".replace(',', '.'))
        print(f"   üí∞ Total gasto: {veiculo.total_gasto_manutencao_formatado}")
        
        # Verificar se h√° duplica√ß√£o
        if veiculo.marca and veiculo.modelo:
            modelo_str = str(veiculo.modelo)
            if marca_nome in modelo_str:
                print(f"   ‚ö†Ô∏è  ATEN√á√ÉO: Poss√≠vel duplica√ß√£o detectada!")
                print(f"       - Marca: {marca_nome}")
                print(f"       - Modelo __str__: {modelo_str}")
            else:
                print(f"   ‚úÖ Sem duplica√ß√£o detectada")
        
        print(f"   üîß ID do ve√≠culo: {veiculo.id}")
        
        if i < len(veiculos):
            print("   " + "-" * 35)
    
    if not veiculos:
        print("   üìù Nenhum ve√≠culo cadastrado para o admin")
    
    print(f"\nüìä RESUMO:")
    print(f"   Total de ve√≠culos: {veiculos.count()}")
    
    # Verificar estrutura de template
    print(f"\nüé® MELHORIAS IMPLEMENTADAS:")
    melhorias = [
        "‚úÖ Remo√ß√£o da marca duplicada no t√≠tulo",
        "‚úÖ Uso de veiculo.marca.nome ao inv√©s de veiculo.marca",
        "‚úÖ Uso de veiculo.modelo.nome ao inv√©s de veiculo.modelo",
        "‚úÖ Tipografia melhorada com fonte Inter",
        "‚úÖ Espa√ßamentos e tamanhos otimizados",
        "‚úÖ Efeitos hover nos cards",
        "‚úÖ Bot√£o de delete com melhor visual",
        "‚úÖ √Årea de custos com design aprimorado"
    ]
    
    for melhoria in melhorias:
        print(f"   {melhoria}")
    
    print(f"\nüåê URL para testar: http://127.0.0.1:8000/")

if __name__ == "__main__":
    test_vehicle_cards()